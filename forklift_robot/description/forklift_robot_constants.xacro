<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">


    <!-- ######################## properties ############################ -->

    <!-- THESE ARE WRONG -->
    <xacro:property name="base_width" value="1.0668"/>
    <xacro:property name="base_length" value="2.159"/>
    <xacro:property name="base_height" value="2.7432"/>

    <!-- ####################### colors! ################### -->
    <material name="white">
        <color rgba="1 1 1 1"/>
    </material>

    <material name="black">
        <color rgba="0 0 0 1"/>
    </material>

    <material name="orange">
        <color rgba="1 0.3 0.1 1"/>
    </material>

    <material name="blue">
        <color rgba="0.2 0.2 1 1"/>
    </material> 


    <!-- ############################# WHEEL STUFF ########################################### -->

    <xacro:property name="wheel_radius" value="0.21"/>
    <xacro:property name="wheel_width" value="0.2"/>


    <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
      <link name="${prefix}_link">
        <visual>
          <origin xyz="0 0 0" rpy="1.5707963267949 0 0"/>
          <geometry>
            <!-- <mesh filename="$(find forklift_robot)/description/meshes/wheel.dae"/> -->
              <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
          </geometry>
          <material name="White">
            <color rgba="${255/255} ${255/255} ${255/255} 1.0"/>
          </material>
        </visual>
        
        <collision>
          <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
          <geometry>
            <!-- <mesh filename="$(find forklift_robot)/description/meshes/wheel.dae"/> -->
            <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
          </geometry>
        </collision>
        
        <xacro:cylinder_inertia m="5.5" r="${wheel_radius}" h="${wheel_width}"/>
        
      </link>

      <!-- Connect the wheels to the base_link at the appropriate location, and 
          define a continuous joint to allow the wheels to freely rotate about
          an axis -->
    </xacro:macro>

    <!-- <><><><> STEERABLE WHEELS <><><><> -->

    <xacro:macro name="steerable_wheel" params="prefix x y z">
        <link name="${prefix}_wheel_link">
            <visual>
                <origin xyz="0 0 0" rpy="1.5707963267949 0 0"/>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
                </geometry>
                <material name="black"/>
            </visual>
            <collision>
              <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
              <geometry>
                  <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
              </geometry>
            </collision>
            <inertial>
                <mass value="5"/>
                <inertia ixx="0.1" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1"/>
            </inertial>
        </link>


         <!-- Steering Joint -->
        <joint name="${prefix}_wheel_steering_joint" type="revolute">
            <parent link="base_link"/>
            <child link="${prefix}_wheel_link"/>
            <origin xyz="${x} ${y} ${z}" rpy="0 0 0"/>
            <axis xyz="0 0 1"/>
            <limit lower="-0.7854" upper="0.7854" effort="100" velocity="0.5"/>
        </joint>
    </xacro:macro>

    <!-- x-axis points forward, y-axis points to left, z-axis points upwards -->
    <!-- Define the gap between the wheel and chassis along y-axis in meters -->
    <xacro:property name="wheel_ygap" value="0.035"/>

    <!-- Position the wheels along the z-axis -->
    <xacro:property name="wheel_zoff" value="0.02"/>

    <!-- Position the wheels along the x-axis -->
    <xacro:property name="wheel_xoff" value="0.421"/>

    <!-- Position the caster wheel along the x-axis -->
    <xacro:property name="caster_xoff" value="0.217"/>


    <!-- ##################### intertial property macros ######################################## -->
    <xacro:macro name="box_inertia" params="m w h d">
      <inertial>
        <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
        <mass value="${m}"/>
        <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
      </inertial>
    </xacro:macro>

    <xacro:macro name="cylinder_inertia" params="m r h">
      <inertial>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <mass value="${m}"/>
        <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
      </inertial>
    </xacro:macro>

    <xacro:macro name="sphere_inertia" params="m r">
      <inertial>
        <mass value="${m}"/>
        <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}"/>
      </inertial>
    </xacro:macro>


  

</robot>